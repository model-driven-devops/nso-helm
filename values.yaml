# Default values for nso.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# NSO-specific variables
adminUsername: admin
httpEnable: "true"
httpsEnable: "false"
sshPort: "22"
cliStyle: c
haEnable: "false"
pamEnable: "false"

# template will auto generate an admin password
# to manually set password, uncomment adminPassword below
# adminPassword: admin

replicaCount: 1

image:
  repository: ghcr.io/model-driven-devops/nso-mdd-docker/nso-oc
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  annotations: {}
  type: NodePort
  sshPort: 22
  httpPort: 80
  httpsPort: 443
  netconfPort: 830
  haPort: 4570



ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: nso.local
      paths:
        - path: /*
          pathType: Prefix
  tls:
  - hosts:
    - nso.local
 
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 6Gi
  # requests:
  #   cpu: 1000m
  #   memory: 4Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
